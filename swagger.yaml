swagger: '2.0'
info:
  description: >-
    This is the API for the backend server (orchestrator) of the ePrescription
    prototype for the ACIT Cloud Studio
  version: 1.0.0
  title: Swagger ePrescription
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: thomas.i.jacobs@accenture.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: e-prescription.mybluemix.net
basePath: /
tags:
  - name: Login
    description: login to application
  - name: Blockchain
    description: Access data stored in blockchain
  - name: SQL Database
    description: Access data stored in local SQL database
  - name: home pages
schemes:
  - http
paths:
  /login:
    post:
      tags:
        - Login
      summary: Validate user's login
      description: >-
        This endpoint will validate the user_name/password from a local database
        and route the user to the correct home screen based on the type of
        participant they are (doctor, pharmacy, patient)
      operationId: login
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: credentials
          description: Login details for user
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '200':
          description: User logged on successfully
          schema: 
            $ref: '#/definitions/LoginOutput'
        '405':
          description: User name not found
  /get-prescription:
    get:
      tags:
        - Blockchain
      summary: Finds prescriptions by prescription_id
      description: >-
        This endpoint will query the blockchain network to return the
        prescription that matches the prescription_id given as a parameter
      operationId: findPrescriptionByPrescriptionId
      produces:
        - application/json
      parameters:
        - name: prescription_id
          in: query
          description: ID for prescription you want to view
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Prescription'
        '400':
          description: Invalid status value
    post:
      tags:
        - Blockchain
      summary: Find prescription based on search body
      description: >-
        This endpoint will allow authority to search for all prescriptions based
        on any combination of pharmacy, doctor, patient, and prescription id
      operationId: findPrescription
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: reportQuery
          description: Query filter to find set of prescriptions
          required: true
          schema:
            $ref: '#/definitions/ReportQuery'
      responses:
        '200':
          description: Found prescriptions
          schema:
            type: array
            items:
              $ref: '#/definitions/Prescription'
        '405':
          description: Was not able to find prescription
  /create-prescription:
    post:
      tags:
        - Blockchain
      summary: Enter new prescription into blockchain
      description: >-
        This endpoint will take the prescription details from the doctor and
        create a new prescription on the blockchain network
      operationId: createPrescription
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: prescription
          description: Prescription object that will be created on the blockchain
          required: true
          schema:
            $ref: '#/definitions/CreatePrescription'
      responses:
        '200':
          description: Created prescription.
        '405':
          description: Was not able to create prescription
  /check-expiry:
    get:
      tags:
        - Blockchain
      summary: Checks if the medicines are expired
      description: >-
        This endpoint will take the prescriptionID to check for expiration.
        The backend will send request to the blockchain to verify that the request is legal/valid.
      operationId: checkExpiry
      produces:
        - application/json
      parameters:
        - in: query
          name: prescription_id
          description: prescriptionId to check for expiration
          required: true
          type: string
      responses:
        '200':
          description: Successfully sent request to blockchain.
          schema:
            type: array
            items:
              $ref: '#/definitions/Medicine'
        '405':
          description: Was not able to reach blockchain
  /deliver-medicines:
    post:
      tags:
        - Blockchain
      summary: Marks the medicines to Delivered
      description: This will mark the medicines are Delivered
      operationId: deliverMedicines
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: deliverPayload
          description: Payload object required to deliver medicine.
          required: true
          schema:
            $ref: '#/definitions/DeliverPayload'
      responses:
        '200':
          description: Created prescription.
        '405':
          description: Was not able to create prescription
  /get-history:
    get:
      tags:
        - Blockchain
      summary: Gets transaction history for a particular asset
      description: >-
        This endpoint will take the prescriptionID to get the transaction history.
      operationId: gethistory
      produces:
        - application/json
      parameters:
        - in: query
          name: prescription_id
          description: prescriptionId to check to get history
          required: true
          type: string
      responses:
        '200':
          description: Got History.
          schema: 
            type: array
            items:
                $ref: '#/definitions/History_info'
        '405':
          description: Was not able to get history
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Patient:
    type: object
    properties:
      patientId:
        type: string
      firstName:
        type: string
      lastName:
        type: string
  Provider:
    type: object
    properties:
      providerId:
        type: string
      firstName:
        type: string
      lastName:
        type: string
  Pharmacy:
    type: object
    properties:
      pharmacyId:
        type: string
      pharmacyName:
        type: string
      location:
        type: string
  Medicine:
    type: object
    properties:
      medicineId:
        type: string
      medicineName:
        type: string
      price:
        type: number
      quantity:
        type: number
      duration:
        type: string
      expiryDate:
        type: string
        format: date-time
      status:
        type: string
  Prescription:
    type: object
    properties:
      prescriptionId:
        type: string
      dateCreated:
        type: string
        format: date-time
      totalPrice:
        type: number
      patient:
        $ref: '#/definitions/Patient'
      provider:
        $ref: '#/definitions/Provider'
      pharmacies:
        type: array
        items:
          $ref: '#/definitions/Pharmacy'
      medicineList:
        type: array
        items:
          $ref: '#/definitions/Medicine'
  CreatePrescription:
    type: object
    properties:
      prescriptionId:
        type: string
      totalPrice:
        type: number
      patientId:
        type: string
      providerId:
        type: string
      pharmacyId:
        type: string
      medicineList:
        type: array
        items:
          $ref: '#/definitions/Medicine'
  ReportQuery:
    type: object
    properties:
      patient_name:
        type: string
      prescription_id:
        type: string
      pharmacy_name:
        type: string
      doctor_name:
        type: string
  DeliverPayload:
    type: object
    properties:
      prescription_id:
        type: string
      pharmacy_id:
        type: string
      medicine_ids:
        type: array
        items:
          type: string
  Login:
    type: object
    required:
      - user_name
      - password
    properties:
      user_name:
        type: string
        format: Joe Patient
      password:
        type: string
        format: password
  LoginOutput:
    type: object
    properties:
      userID:
        type: number
      role:
        type: string
      name: 
        type: string
      location:
        type: string
  History_info:
    type: object
    properties:
        provider_id:
          type: string
        pharmacy_id:
          type: string
        timestamp:
          type: string
          format: date-time
        transaction:
          type: string
    

        
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
